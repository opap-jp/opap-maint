#!/bin/bash
#
# create-snap
#
# Copyright (C) 2014 OPAP-JP contributors.
#
# This program is distributed under the MIT License.


#####################
# const and env
#####################

# 環境変数を読み込む

SCRIPT_DIR="$(dirname -- "$(readlink -f -- "$0")")"
. ${SCRIPT_DIR}/setenv

# プログラム情報

SCRIPT_NAME=$(basename "$0")
VERSION="1.0"

USAGE="使用法: ${SCRIPT_NAME} [OPTION] TARGET_ID OUTPUT_DIR
指定したIDのスナップショットをエクスポートします。

オプション:
  -h                           この使用法を表示します
  -v                           このプログラムのバージョン情報を表示します

"
# 関連プログラム

SETSTATUS_CMD=${SCRIPT_DIR}/snap-setstatus
LS_CMD=${SCRIPT_DIR}/snap-ls

#####################
# functions
#####################
usage_exit() {
    echo "${USAGE}" 1>&2
    exit 1
}

version() {
    echo "${SCRIPT_NAME} Version ${VERSION}"
    exit 0
}
######################
# main
######################

# 引数デフォルト値
target_id=""
output_dir=""

# 引数解析
OPT=`getopt -o hv -l help -l version -- "$@"`
if [ $? != 0 ]; then
    usage_exit
fi
eval set -- "$OPT"

while true
do
    case $1 in
    -h | --help)
        usage_exit
        ;;
    -v | --version)
        version
        ;;
    --)
        shift
        break
        ;;
    *)
        usage_exit
        ;;
    esac
done

target_id=$1
output_dir=$2

if [ "$target_id" = "" ]; then
    usage_exit
fi

if [ "$output_dir" = "" ]; then
    usage_exit
fi


# スナップショットエクスポート処理

export_name=$(hostname)-$(date '+%Y%m%d%H%M%S')-$RANDOM
temp_dir=/tmp/${export_name}

mkdir $temp_dir
cd $temp_dir

err_flg=0
${LS_CMD} --id=${target_id} | while read LINE snap_id mountpoint vol_name snap status; do

    sync

    out=$(${BTRFS_CMD} send -f ${vol_name} ${snap}  2>&1)
    exitcode=$?
    if [ $exitcode -eq 0 ] ; then
        logger -p ${LOG_FACILITY}.info -t ${SCRIPT_NAME} "${out}"
    else
        logger -p ${LOG_FACILITY}.err -t ${SCRIPT_NAME} "${out}"
        echo $out 1>&2
        err_flg=1
    fi
    
done


${LS_CMD} --id=${target_id} >  info.txt

cd ..
tar cvzf ${output_dir}/${export_name}.tar.gz ${temp_dir}

if [ $? -ne 0 ] ; then
    err_flg=1
fi

rm -rf ${temp_dir}

readlink -f ${output_dir}/${export_name}.tar.gz

exit $err_flg

